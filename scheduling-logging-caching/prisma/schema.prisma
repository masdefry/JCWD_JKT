// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model Product {
  id    Int   @id   @default(autoincrement())
  name  String 
  price String 
  description String 
  stock Int
  category Category
  imageUrl  String  

  transactionItem TransactionItem[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime? 

  @@map("products")
}

enum Category {
  ELECTRONIC
  FOOD_AND_BEVERAGE
  CLOTHES
}

model Transaction {
  id  Int @id @default(autoincrement())
  status  Status 
  totalPrice Int 
  expiredAt   DateTime? 

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime? 

  transactionItem TransactionItem[]

  @@map("transactions")
}

model TransactionItem {
  id  Int @id @default(autoincrement())
  productId Int
  product Product @relation(fields: [productId], references: [id])
  qty Int 
  price Int 
  transactionId Int 
  transaction Transaction @relation(fields: [transactionId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime? 

  @@map("transaction_items")
}

enum Status {
  WAITING_FOR_PAYMENT
  PAID 
  CANCELLED
}